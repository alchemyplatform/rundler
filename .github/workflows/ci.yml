on:
  push:
    branches:
      - main
  pull_request:

name: ci
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install protobuf
        run: sudo apt-get install -y protobuf-compiler
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run tests
        run: cargo test

  spec-test:
    runs-on: ubuntu-latest
    services:
      geth:
        image: dtr22/geth-dev
        ports:
          - 8545:8545
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install protobuf
        run: sudo apt-get install -y protobuf-compiler
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Install pdm
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: 3.9
          cache: true
          cache-dependency-path: test/spec-tests/bundler-spec-tests/pdm.lock
      - uses: docker/setup-buildx-action@v1
      - name: Build docker container
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: alchemy-platform/rundler:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run spec-tests
        run: test/spec-tests/ci/run-spec-tests.sh

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install protobuf
        run: sudo apt-get -y install protobuf-compiler
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Install toolchain (nightly)
        run: rustup toolchain add nightly --component rustfmt --profile minimal
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        # Build to generate the ABI bindings.
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: cargo +nightly fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          toolchain: nightly
          args: --all --check
      - name: cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all --all-features -- -D warnings

  cog_check_job:
    runs-on: ubuntu-latest
    name: check conventional commit compliance
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # pick the pr HEAD instead of the merge commit
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Conventional commit check
        uses: cocogitto/cocogitto-action@v3
        with:
          check-latest-tag-only: true
