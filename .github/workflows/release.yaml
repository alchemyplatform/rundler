## This release action is inpired from https://githug.com/paradigmxyz/reth

name: Release

on:
  push:
    tags:
      - v*

jobs:
  extract-version:
    name: extract version
    runs-on: ubuntu-latest
    steps:
      - name: Extract version
        run: echo "VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_OUTPUT
        id: extract_version
    outputs:
      VERSION: ${{ steps.extract_version.outputs.VERSION }}

  build:
    name: build release
    strategy:
      matrix:
        arch:
          [
            aarch64-unknown-linux-gnu,
            x86_64-unknown-linux-gnu,
            x86_64-apple-darwin,
            aarch64-apple-darwin,
            x86_64-pc-windows-gnu,
          ]
        include:
          - arch: aarch64-unknown-linux-gnu
            platform: ubuntu-latest
            profile: maxperf
          - arch: x86_64-unknown-linux-gnu
            platform: ubuntu-latest
            profile: maxperf
          - arch: x86_64-apple-darwin
            platform: macos-latest
            profile: maxperf
          - arch: aarch64-apple-darwin
            platform: macos-latest
            profile: maxperf
          - arch: x86_64-pc-windows-gnu
            platform: ubuntu-latest
            profile: maxperf

    runs-on: ${{ matrix.platform }}
    needs: extract-version
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Get latest version of stable Rust
        run: rustup update stable
      - name: Install target
        run: rustup target add ${{ matrix.arch }}
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      # ==============================
      # Apple M1 SDK setup
      # ==============================

      - name: Apple M1 setup
        if: ${{ matrix.job.target == 'aarch64-apple-darwin' }}
        run: |
          echo "SDKROOT=$(xcrun -sdk macosx --show-sdk-path)" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx --show-sdk-platform-version)" >> $GITHUB_ENV

      # ==============================
      #       Builds
      # ==============================

      - name: Build rundler for ${{ matrix.arch }}
        run: |
          cargo install cross
          env PROFILE=${{ matrix.profile }} make build-${{ matrix.arch }}

      - name: Move cross-compiled binary
        if: matrix.arch != 'x86_64-pc-windows-gnu'
        run: |
          mkdir artifacts
          mv target/${{ matrix.arch }}/${{ matrix.profile }}/rundler ./artifacts

      - name: Move cross-compiled binary (Windows)
        if: matrix.arch == 'x86_64-pc-windows-gnu'
        run: |
          mkdir artifacts
          mv target/${{ matrix.arch }}/${{ matrix.profile }}/rundler.exe ./artifacts

      # ==============================
      #       Signing
      # ==============================

      - name: Configure GPG and create artifacts
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          export GPG_TTY=$(tty)
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --batch --import
          cd artifacts
          tar -czf rundler-${{ needs.extract-version.outputs.VERSION }}-${{ matrix.arch }}.tar.gz rundler*
          echo "$GPG_PASSPHRASE" | gpg --passphrase-fd 0 --pinentry-mode loopback --batch -ab rundler-${{ needs.extract-version.outputs.VERSION }}-${{ matrix.arch }}.tar.gz
          mv *tar.gz* ..
        shell: bash

      # =======================================================================
      # Upload artifacts
      # This is required to share artifacts between different jobs
      # =======================================================================
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: rundler-${{ needs.extract-version.outputs.VERSION }}-${{ matrix.arch }}.tar.gz
          path: rundler-${{ needs.extract-version.outputs.VERSION }}-${{ matrix.arch }}.tar.gz

      - name: Upload signature
        uses: actions/upload-artifact@v3
        with:
          name: rundler-${{ needs.extract-version.outputs.VERSION }}-${{ matrix.arch }}.tar.gz.asc
          path: rundler-${{ needs.extract-version.outputs.VERSION }}-${{ matrix.arch }}.tar.gz.asc
